//lecture 44 queues part 2 continued
import java.util.Stack;

class StackQueue
{
    Stack<Integer> s1 = new Stack<Integer>();
    Stack<Integer> s2 = new Stack<Integer>();
    //function to push an element in queue by using 2 stacks
    void push(int x)
    {
        while(!s1.isEmpty())
        {
            s2.push(s1.pop());
        }
        void push(x);
        if(!s2.isEmpty())
        {
            s1.push(s2.pop());
        }
    }
    int pop()
    {
        if(s1.isEmpty()) return -1;
        return s1.pop();
    }
}
class StackQueue
{
    Stack<Integer> s1 = new Stack<Integer>();
    Stack<Integer> s2 = new Stack<Integer>();
    //function to push an element in queue by using 2 stacks
    void push(int x)
    {

        s1.push(x);
    }
    int pop() {
        if(s1.isEmpty() && s2.isEmpty())
        {
            return -1;//no element there
        }
        if(s2.isEmpty())
        {
            while(!s1.isEmpty())
            {
                s2.push(s1.pop());
            }
     
        }
        return s2.pop();
    }
    
}
